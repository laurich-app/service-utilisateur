### Inscription

POST http://localhost:8080/users
Content-Type: application/json
User-Agent: Intelij IDEA

{
  "pseudo": "Bob",
  "email": "Bobibi@gmail.com",
  "motDePasse": "MonMdp"
}

> {%
    client.test("Request executed successfully", function() {
        client.assert(response.status === 201, "Response status is not 201");
    });
    if(response.status === 201) {
        client.global.set("accessToken", response.headers.valueOf("Authorization").slice(7));
        client.global.set("user_location", response.headers.valueOf("Location"));
    }
%}

### Profil

GET {{user_location}}
Content-Type: application/json
Authorization: Bearer {{accessToken}}

> {%
    client.test("Request executed successfully", function() {
        client.assert(response.status === 200, "Response status is not 200");
    });
%}

### Deconnexion

DELETE http://localhost:8080/auth/connexion
Content-Type: application/json
Authorization: Bearer {{accessToken}}

> {%
    client.test("Request executed successfully", function() {
        client.assert(response.status === 204, "Response status is not 204");
    });
%}

### Connexion

POST http://localhost:8080/auth/connexion
Content-Type: application/json

{
  "email": "Bobibi@gmail.com",
  "motDePasse": "MonMdp"
}

> {%
    client.test("Request executed successfully", function() {
        client.assert(response.status === 200, "Response status is not 200");
    });
    if(response.status === 200) {
        client.global.set("accessToken", response.headers.valueOf("Authorization").slice(7));
        client.global.set("refreshToken", response.body.refreshToken);
    }
%}

### Token de raffraichissement

POST http://localhost:8080/auth/token
Content-Type: application/json

{
  "accessToken": "{{accessToken}}",
  "refreshToken": "{{refreshToken}}"
}

> {%
    client.test("Request executed successfully", function() {
        client.assert(response.status === 200, "Response status is not 200");
    });
    if(response.status === 200) {
        client.global.set("accessToken", response.headers.valueOf("Authorization").slice(7));
    }
%}

### User by ID

GET http://localhost:8080/users/2
Content-Type: application/json
Authorization: Bearer {{accessToken}}

> {%
    client.test("Request executed successfully", function() {
        client.assert(response.status === 200, "Response status is not 200");
    });
%}

### All users

GET http://localhost:8080/users
Content-Type: application/json
Authorization: Bearer {{accessToken}}

> {%
    client.test("Request executed successfully", function() {
        // Unauthorized, only admin is available :)
        client.assert(response.status === 403, "Response status is not 403");
    });
%}

### Connexion (admin)

POST http://localhost:8080/auth/connexion
Content-Type: application/json

{
  "email": "root@root.com",
  "motDePasse": "root"
}

> {%
    client.test("Request executed successfully", function() {
        client.assert(response.status === 200, "Response status is not 200");
    });
    if(response.status === 200) {
        client.global.set("accessToken", response.headers.valueOf("Authorization").slice(7));
        client.global.set("refreshToken", response.body.refreshToken);
    }
%}

### All users (admin)

GET http://localhost:8080/users
Content-Type: application/json
Authorization: Bearer {{accessToken}}

> {%
    client.test("Request executed successfully", function() {
        // Unauthorized, only admin is available :)
        client.assert(response.status === 200, "Response status is not 200");
    });
%}

###

GET http://localhost:8080/users/2
Content-Type: application/json
Authorization: Bearer {{accessToken}}

> {%
    client.test("Request executed successfully", function() {
        client.assert(response.status === 200, "Response status is not 200");
    });
%}